<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">

	<!-- school12 타입과 연결시켜주기 DB 컬럼명을 연결시켜주기 위한 resultMap. config에 type명 선언해서 사용 -->
	<resultMap id="memberMap" type="member3">
		<id column="member_no" property="memberNo"/>
		<result column="member_id" property="memberId"/>
		<result column="member_pw" property="memberPw"/>
		<result column="member_name" property="memberName"/>
		<result column="email" property="email"/>
		<result column="member_type" property="memberType"/>
		<result column="enroll_date" property="enrollDate"/>
		
		<!-- 학생인 경우 -->
		<result column="grade" property="grade"/>
		
		<!-- 교사인 경우 -->
		<result column="teacher_subject" property="teacherSubject"/>
		<result column="teacher_info_title" property="teacherInfoTitle"/>
		<result column="teacher_info_content" property="teacherInfoContent"/>
		
		<!-- School12와 연결 -->
		<association property="school" resultMap="school.schoolMap"/>
	</resultMap>

	<!-- member3 테이블 insert 후 생성된 key값 가져오기 -->
	<insert id="insertMember" parameterType="member3">
		<selectKey keyProperty="memberNo" resultType="int" order="BEFORE">
			SELECT SEQ_MEMBER3_NO.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO MEMBER3 (
			MEMBER_NO,		MEMBER_ID,		MEMBER_PW,		MEMBER_NAME,
			EMAIL,			PHONE,			ADDRESS,		MEMBER_TYPE,	ENROLL_DATE
		) VALUES (
			#{memberNo},	#{memberId},	#{memberPw},	#{memberName},
			#{email},		#{phone},		#{address},		#{memberType},	SYSDATE
		)
	</insert>
	
	<!-- 학생 정보 INSERT -->
	<insert id="insertStudent" parameterType="member3">
		INSERT INTO STUDENTS3 (
			MEMBER_NO,		GRADE,			SCHOOL_NO
		) VALUES (
			#{memberNo},	#{grade},		#{school.schoolNo}
		)
	</insert>

	<!-- 교사 정보 INSERT -->
	<insert id="insertTeacher" parameterType="member3">
		INSERT INTO TEACHERS3 (
			MEMBER_NO,		TEACHER_SUBJECT,		TEACHER_INFO_TITLE,
			TEACHER_INFO_CONTENT
		) VALUES (
			#{memberNo},	#{teacherSubject},		#{teacherInfoTitle},
			#{teacherInfoContent}
		)
	</insert>


	
	<select id="checkEmailDuplicateByEmail" parameterType="member3" resultMap="memberMap">
		SELECT EMAIL FROM MEMBER3 WHERE EMAIL=#{email}
	</select> 
	
	<select id="selectMemberByNameAndEmail" parameterType="member3" resultMap="memberMap">
		SELECT EMAIL FROM MEMBER3 WHERE EMAIL=#{email} AND MEMBER_NAME=#{memberName}
	</select>
	
	<select id="selectMemberById" parameterType="string" resultMap="memberMap">
		SELECT * FROM MEMBER3 WHERE MEMBER_ID=#{memberId}
	</select>
	<!-- teacherListAndDetail 페이지의 리스트에 교사 출력용 -->
	<select id="selectAllTeachers" resultMap="memberMap">
		SELECT M.MEMBER_NO, M.MEMBER_NAME, M.ENROLL_DATE, T.*
		FROM MEMBER3 M
		JOIN TEACHERS3 T ON M.MEMBER_NO = T.MEMBER_NO
		ORDER BY M.MEMBER_NO
	</select>
	<select id="selectTeachersBySubject" parameterType="map" resultMap="memberMap">
		SELECT *
        FROM (
            SELECT ROWNUM AS RNUM, SUB.*
            FROM (
                SELECT M.MEMBER_NO, M.MEMBER_NAME, M.ENROLL_DATE, 
                       T.TEACHER_SUBJECT, T.TEACHER_INFO_TITLE, T.TEACHER_INFO_CONTENT
                FROM MEMBER3 M
                JOIN TEACHERS3 T ON M.MEMBER_NO = T.MEMBER_NO
                WHERE T.TEACHER_SUBJECT = #{teacherSubject}
                ORDER BY M.MEMBER_NO
            ) SUB
            WHERE #{end} >= ROWNUM
        ) 
        WHERE RNUM >= #{start}
	</select>
	<select id="selectTeachersCount" parameterType="map" resultType="int">
		SELECT COUNT(*) FROM TEACHERS3 WHERE TEACHER_SUBJECT=#{teacherSubject}
	</select>
	<select id="selectSubjects" resultType="string">
		SELECT DISTINCT TEACHER_SUBJECT FROM TEACHERS3
	</select>
	
<!-- 	<select id="selectMemberByNameAndEmail" parameterType="member3" resultMap="memberMap">
		SELECT * FROM MEMBER3 WHERE EMAIL=#{email} AND MEMBER_NAME=#{memberName}
	</select> -->
	
<!-- 	<update id="updatePassword" parameterType="member3">
		UPDATE MEMBER3 SET 
			member_pw=#{memberPw}
			WHERE email=#{email}
	</update> -->
	
<!-- 	<update id="updateMember" parameterType="member3">
		UPDATE MEMBER3 SET
			MEMBER_NAME=#{memberName}, EMAIL=#{email}, MEMBER_PW=#{memberPw} WHERE EMAIL=#{email}			
	</update> -->
	
	
</mapper>