<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="course">
	<resultMap id="courseMap" type="Course3">
		<id column="course_no" property="courseNo"/>
		<result column="course_title" property="courseTitle"/>
		<result column="course_desc" property="courseDesc"/>
		<result column="course_category_no" property="courseCategoryNo"/>
		<result column="grade" property="grade"/>
		<result column="course_price" property="coursePrice"/>
		<result column="course_price_sale" property="coursePriceSale"/>
		<result column="course_period" property="coursePeriod"/>
		<result column="course_status" property="courseStatus"/>
		<result column="created_at" property="createdAt"/>
		<result column="updated_at" property="updatedAt"/>
		<result column="begin_date" property="beginDate"/>
		<result column="end_date" property="endDate"/>
		<result column="total_lectures" property="totalLectures"/>
		<result column="member_no" property="memberNo"/>
	</resultMap>
	
	<select id="selectCourseBySubjectNo" parameterType="map" resultMap="courseMap">
		SELECT C.*,
				I.IMG_NO,  T.TEACHER_SUBJECT
		FROM (SELECT ROWNUM AS RNUM, A.*
			  FROM (SELECT C.* 
			  		FROM COURSE3 C
			  			LEFT JOIN TEACHERS3 T ON C.MEMBER_NO = T.MEMBER_NO
			  			WHERE T.TEACHER_SUBJECT = #{subjectName} AND C.GRADE = #{gradeNum}
			  			ORDER BY C.COURSE_NO DESC) A
			  		WHERE #{end} >= ROWNUM
			  ) C
		LEFT JOIN TEACHERS3 T ON C.MEMBER_NO = T.MEMBER_NO 
		LEFT JOIN MEMBER3 M ON C.MEMBER_NO = M.MEMBER_NO
		LEFT JOIN IMAGE3 I ON M.MEMBER_NO = I.MEMBER_NO
		WHERE RNUM >= #{start}
	</select>
	<!-- 강좌 상태 확인 및 업데이트 -->
	<update id="updateCourseStatus">
		UPDATE COURSE3 
		SET COURSE_STATUS = 
			CASE 
				<!--	 시작일이 없는 경우 준비중(0) -->	
				WHEN BEGIN_DATE IS NULL THEN 0
				<!--	 시작일이 미래인 경우 준비중(0) -->	
				WHEN BEGIN_DATE > SYSDATE THEN 0
				<!--	 종료일이 있고, 종료일이 지난 경우 완료(2) -->	
				WHEN END_DATE IS NOT NULL AND SYSDATE > END_DATE THEN 2
				<!--	 시작일이 지났고, 종료일이 없거나 진행중인 경우 진행중(1) -->	
				WHEN ESYSDATE >= BEGIN_DAT AND (END_DATE IS NULL OR END_DATE >= SYSDATE) THEN 1
			END,
		UPDATED_AT = SYSDATE
		WHERE COURSE_NO = #{courseNo}
	</update>
	
	<!-- 특정 교사의 강좌 상태별 조회 -->
	<select id="selectCoursesByStatus" resultType="Course3">
		SELECT * FROM COURSE3 
		WHERE MEMBER_NO = #{memberNo}
		<choose>
			<when test="status == 'preparing'">
				AND (COURSE_STATUS = 0 OR BEGIN_DATE > SYSDATE)
			</when>
			<when test="status == 'inProgress'">
				AND COURSE_STATUS = 1 
				AND (SYSDATE >= BEGIN_DATE)
				AND (END_DATE IS NULL OR END_DATE >= SYSDATE)
			</when>
			<when test="status == 'completed'">
				AND COURSE_STATUS = 2 
				AND SYSDATE > END_DATE
			</when>
		</choose>
		ORDER BY CREATED_AT DESC
	</select>
	
	<!-- 각 상태별 강좌 수 조회 -->
	<select id="selectCourseStatusCount" resultType="map">
		SELECT
			COUNT(*) as total,
			SUM(CASE 
				WHEN COURSE_STATUS = 0 OR BEGIN_DATE > SYSDATE THEN 1 
				ELSE 0 
			END) as preparing,
			SUM(CASE 
				WHEN COURSE_STATUS = 1 
				AND SYSDATE >= BEGIN_DATE
				AND (END_DATE IS NULL OR END_DATE >= SYSDATE) THEN 1 
				ELSE 0 
			END) as inProgress,
			SUM(CASE 
				WHEN COURSE_STATUS = 2 
				AND SYSDATE > END_DATE THEN 1 
				ELSE 0 
			END) as completed
		FROM COURSE3
		WHERE MEMBER_NO = #{memberNo}
	</select>
</mapper>
